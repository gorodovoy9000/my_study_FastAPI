services:
    db:
        image: postgres:17
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}
        ports:
            - "${DB_PORT:-5432}:${DB_PORT:-5432}"
        volumes:
            - pgdata:/var/lib/postgresql/data

    redis:
        image: redis:8
        ports:
            - "${REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
        volumes:
            - redis_data:/data

    backend:
        build:
            context: ./
            dockerfile: ./dev.Dockerfile
        env_file: ".env"
        environment:
            - PYTHONUNBUFFERED=1
        depends_on:
            - db
            - redis
        ports:
            - "8000:8000"
        volumes:
            - "media:${LOCAL_MEDIA_ROOT}"
            - ./alembic.ini:/opt/fastapi_app/alembic.ini:ro
            - ./src:/opt/fastapi_app/src:ro
            - ./src/migrations/versions:/opt/fastapi_app/src/migrations/versions
        command: >
            bash -c "fastapi dev --host 0.0.0.0 --port 8000 src/main.py"

    celery_worker:
        build:
            context: ./
            dockerfile: ./dev.Dockerfile
        env_file: ".env"
        environment:
            - PYTHONUNBUFFERED=1
        depends_on:
            - backend
            - redis
        volumes:
            - "media:${LOCAL_MEDIA_ROOT}"
            - ./src:/opt/fastapi_app/src:ro
        command: "celery --app=src.background_tasks.celery.app:celery_app worker -l INFO"

    celery_beat:
        build:
            context: ./
            dockerfile: ./dev.Dockerfile
        env_file: ".env"
        environment:
            - PYTHONUNBUFFERED=1
        depends_on:
            - backend
            - redis
        volumes:
            - "media:${LOCAL_MEDIA_ROOT}"
            - ./src:/opt/fastapi_app/src:ro
        command: "celery --app=src.background_tasks.celery.app:celery_app beat -l INFO"

volumes:
    media:
    pgdata:
    redis_data:
